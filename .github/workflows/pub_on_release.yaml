name: Publish on Docker Hub

on:
  push:
    branches:
      - "main"

jobs:
  # run_tests:
  #   runs-on: self-hosted
  #   steps:
  #     # - uses: actions/checkout@main
  #     # - uses: actions/setup-node@v3
  #     #   with:
  #     #     node-version: '16.18.0'
  #     #     architecture: 'x64'
  #     - name: Install express
  #       run: npm install express --save
  #     - name: Install SQLite
  #       run: npm install sqlite3
  
  # build:
  #   needs: [run_tests]
  #   runs-on: self-hosted
  #   steps:
  #     # - name: Checkout
  #     #   uses: actions/checkout@v3

  #     # - name: Set up Docker Buildx
  #       # uses: docker/setup-buildx-action@v2
  #     # - name: Build and push
  #     #   uses: docker/build-push-action@v3
  #     #   with:
  #     #     context: .
  #     #     file: ./Dockerfile
  #     #     push: true
  #     #     tags: ${{ secrets.DOCKER_LOGIN }}/calendar:latest
  post:
    # needs: [run_tests]
    runs-on: self-hosted
    steps:

    - name: delete folder
      run: rm -r calendar
    - name: copy file 
      run: git clone https://github.com/lenochcados/calendar.git
    - name: cd calendar
      run: cd calendar/
    # - name: Delete docker container
    #   run: docker kill $(docker ps -q)
    # - name: Delete docker image
    #   run: docker image prune
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_LOGIN }}
        password: ${{ secrets.DOCKER_PWD}}  
    - name: docker build
      run: docker build . -t lenochcados/calendar
    - name: docker run
      run: docker run -d -p 80:3000 lenochcados/calendar

# on:
#   push:
#     tags:
#       - '*'
#     branches:
#       - '*'
# jobs:
#   run_tests:
#     runs-on: [ubuntu-22.04]
#     steps:
#       - uses: actions/checkout@main
#       - uses: actions/setup-node@v3
#         with:
#           node-version: '16.18.0'
#           architecture: 'x64'
#       - name: Install express
#         run: npm install express --save
#       - name: Install SQLite
#         run: npm install sqlite3